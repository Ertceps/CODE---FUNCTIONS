#--------------------------------------
# STATE 3
#--------------------------------------

#-+- IMPORT -+-
import RPi.GPIO as GPIO # to control GPIO
import time # to get the time - ba we c pas complique
from threading import thread
import threading # to do multi-tasking actions
import os # to get file size
import logging # to create a logger file
import sys
import STATE_0
import STATE_1
import STATE_2
import STATE_4

def STATE_3():
    print "STATE 3 : VENTING CHAMBER\n"
    # Display LCD : STATE 3
    # Display  LCD : STATE 3
    LCD_DISPLAY.main("STATE 3")

    # Safety Check


    # Update command log
    COMMAND = "STATE 3"

    HVGV_OFF() # Close HVGV
    TMP_OFF() # Switch OFF TMP

                      # Receive command
    if COMMAND<>"STATE 3":
        # Issue error 5502
        STATE_4() #Go to State 4 : Safe State
    elif MODE=="LOCAL":
        # Send error 5521 to chamber control
        LOCAL() #Exit automatic sequence
    else :
        # Open TMP flood valve
        PP_OFF() # Switch OFF PP
        VV_ON() # Open Venting Valve
        start_time = time.time()
        time.sleep(10) # Wait 10 sec

        # Error log

        counter = 1
        P1_0 = P1
        P2_0 = P2
        time.sleep(0.5)
        P1_1 = P1
        P2_1 = P2
        elapsed_time = time.time() - start_time
        if ((P1_0<P1_1) and (P2_0<P2_1)):
            while elapsed_time < 100: #!!!!! Value TBD:
             time.sleep(30) # Wait 30 sec
             # Error log
             WAIT_ROUTINE()
             elapsed_time = time.time() - start_time # Time since VV open
            if elapsed_time > 100: # !!!!! Value TBD
                VV_OFF()
                TMP_FLOOD_OFF()
                STATE_0() # Go to STATE 0 : Vented Chamber




